parser: babel-eslint

plugins: [react]

ecmaFeatures:
  jsx: true
  modules: true

env:
  es6: true
  browser: true
  node: true

rules:
  brace-style: [error, 1tbs, { allowSingleLine: false }]
  comma-dangle: [error, never]
  consistent-return: error
  curly: error
  default-case: error
  eqeqeq: [warn, smart]
  func-style: [warn, expression, { allowArrowFunctions: true }]
  indent: [error, 2, { SwitchCase: 1 }]
  keyword-spacing: error
  linebreak-style: [error, unix]
  new-cap: [error, { capIsNew: false }] #####
  no-cond-assign: error
  no-constant-condition: [error, { checkLoops: false }]
  no-dupe-args: error
  no-duplicate-case: error
  no-else-return: error
  no-empty: error
  no-eq-null: error
  no-eval: error
  no-ex-assign: error
  no-extra-boolean-cast: error
  no-floating-decimal: error
  no-lonely-if: error #####
  no-loop-func: error
  no-mixed-spaces-and-tabs: error
  no-multi-spaces: error #####
  no-multiple-empty-lines: [error, { max: 2 }]
  no-negated-condition: error
  no-new-func: error
  no-self-compare: error
  no-sequences: error
  no-shadow: error
  no-trailing-spaces: error
  no-undef-init: error
  no-undef: error
  no-undefined: error
  no-unneeded-ternary: error
  no-unreachable: error
  no-unsafe-finally: error
  no-unsafe-negation: error
  no-unused-vars: warn
  no-use-before-define: [error, { functions: false, classes: true }]
  no-useless-escape: error
  no-useless-return: error
  no-warning-comments: [warn, { terms: [todo, fixme], location: anywhere }]
  radix: error
  semi: [error, always]
  space-before-blocks: [error, always] #####
  space-infix-ops: error
  use-isnan: error
  valid-typeof: [error, { requireStringLiterals: true }]

# ES2015 Especific Rules
  arrow-body-style: [error, always]
  arrow-parens: [error, always]
  arrow-spacing: error
  constructor-super: error
  no-class-assign: error
  no-confusing-arrow: error
  no-dupe-class-members: error
  no-duplicate-imports: error
  no-this-before-super: error
  no-useless-constructor: error
  no-useless-rename: error
  no-var: error
  object-shorthand: [error, properties]
  prefer-arrow-callback: error #####

# Node Specific Rules
  no-path-concat: error
  no-process-env: error

# React Specific Rules
  react/jsx-boolean-value: [error, always]
  react/jsx-key: error
  react/jsx-no-undef: error
  react/jsx-uses-react: error
  react/jsx-uses-vars: error
  react/jsx-wrap-multilines: error
  react/no-did-mount-set-state: error
  react/no-did-update-set-state: error
  react/no-unknown-property: error
  react/prefer-es6-class: [error, always]
  react/prop-types: warn
  react/react-in-jsx-scope: error
  react/self-closing-comp: error
